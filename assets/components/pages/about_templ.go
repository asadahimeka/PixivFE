// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "codeberg.org/pixivfe/pixivfe/server/template/commondata"

// AboutData holds data specific to the about page.
type AboutData struct {
	Title          string
	Time           string
	Version        string
	ImageProxy     string
	AcceptLanguage string
}

func About(cd commondata.PageCommonData, pageData AboutData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex flex-col w-full max-w-3xl text-neutral-300 text-sm/6 gap-2\"><h2 class=\"text-xl font-medium text-neutral-100\">About PixivFE</h2><p>PixivFE is an alternative frontend for <a href=\"https://en.wikipedia.org/wiki/pixiv\" class=\"text-link text-neutral-200 hover:text-neutral-100\">pixiv</a>, allowing you to enjoy artwork without unnecessary distractions or restrictions.</p><p>This is an open-source project. Join us on Matrix if you have any questions or want to chat about PixivFE at <a href=\"https://matrix.to/#/#pixivfe:4d2.org\" class=\"text-link text-neutral-200 hover:text-neutral-100\">#pixivfe:4d2.org</a>.</p><h3 class=\"text-base font-bold text-neutral-100 mt-4\">Why use it?</h3><ul class=\"list-outside list-disc space-y-1 ps-4\"><li>PixivFE lets you browse pixiv anonymously with all restrictions removed. No pixiv account is needed to access content.</li><li>PixivFE prevents direct interaction with pixiv and its third-party services/analyzers. All processing occurs server-side, leaving only PixivFE client-side. No more Google Analytics tracking for every action!</li><li>PixivFE offers a lightweight, modern, feature-rich interface that minimizes browsing disruptions - unlike pixiv's original frontend. JavaScript isn't even required!</li><li>PixivFE is free software with fully open-source code and transparent development. Anyone can contribute, modify, or use it.</li></ul><p>PixivFE prioritizes accessibility, privacy, and freedom. If you value these principles, try PixivFE now - or better yet, host it locally!</p><h3 class=\"text-base font-bold text-neutral-100 mt-4\">How does it work?</h3><p>PixivFE retrieves content through pixiv's official APIs and displays it through our independent interface. When using public instances without an account, you remain completely anonymous as all requests are handled server-side. Even when connected to an account, pixiv only sees standard account activity without cookie/JavaScript tracking.</p><h3 class=\"text-base font-bold text-neutral-100 mt-4\">How can I make it my own?</h3><p>Concerned about public instance logs? You can <a href=\"https://pixivfe-docs.pages.dev/hosting/hosting-pixivfe/\" class=\"text-link text-neutral-200 hover:text-neutral-100\">self-host your own instance</a> for personal use.</p><p>If you can help others access art freely while protecting privacy, consider adding your instance to our <a href=\"https://pixivfe-docs.pages.dev/instance-list/\" class=\"text-link text-neutral-200 hover:text-neutral-100\">public instances list</a>!</p><h3 class=\"text-base font-bold text-neutral-100 mt-4\">Instance details</h3><table class=\"block border-collapse whitespace-nowrap overflow-x-auto\"><thead class=\"border-b border-neutral-700 *:p-4 text-neutral-400 font-medium\"><tr><td class=\"p-4\">Property</td><td class=\"p-4\">Value</td><td class=\"p-4\">Description</td></tr></thead> <tbody><tr class=\"border-b border-neutral-700 *:p-4\"><td class=\"font-medium\">Revision</td><td class=\"p-4\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if cd.RepoURL != "" && cd.RevisionHash != "" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<a href=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 templ.SafeURL = templ.SafeURL(cd.RepoURL + "/commit/" + cd.RevisionHash)
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var2)))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\" class=\"contents\"><div class=\"text-link text-neutral-200 hover:text-neutral-100\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if cd.Revision != "" {
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(cd.Revision)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `assets/components/pages/about.templ`, Line: 129, Col: 23}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "unknown")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div></a>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"text-neutral-200\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if cd.Revision != "" {
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(cd.Revision)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `assets/components/pages/about.templ`, Line: 138, Col: 22}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "unknown")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</td><td class=\"whitespace-normal\">Specific revision of PixivFE source code in use</td></tr><tr class=\"border-b border-neutral-700 *:p-4\"><td class=\"font-medium\">Server start time (UTC)</td><td>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(pageData.Time)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `assets/components/pages/about.templ`, Line: 151, Col: 24}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</td><td class=\"whitespace-normal\">Date and time when this instance was last started</td></tr><tr class=\"border-b border-neutral-700 *:p-4\"><td class=\"font-medium\">Default image proxy</td><td>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(pageData.ImageProxy)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `assets/components/pages/about.templ`, Line: 158, Col: 30}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "</td><td class=\"whitespace-normal\">Image proxy server used to retrieve images from i.pximg.net</td></tr><tr class=\"border-b border-neutral-700 *:p-4\"><td class=\"font-medium\">Accept-Language header</td><td>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 string
		templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(pageData.AcceptLanguage)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `assets/components/pages/about.templ`, Line: 165, Col: 34}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</td><td class=\"whitespace-normal\">Preferred natural language and locale when making requests to the pixiv API</td></tr><tr class=\"*:p-4\"><td class=\"font-medium\">Release</td><td>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(pageData.Version)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `assets/components/pages/about.templ`, Line: 172, Col: 27}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "</td><td class=\"whitespace-normal\">Release of PixivFE in use</td></tr></tbody></table></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
